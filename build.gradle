plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'

}

group = 'com.awokens'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven { url 'https://jitpack.io' }

    maven {
        name = "codemc"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly 'net.luckperms:api:5.4'
    implementation 'com.samjakob:SpiGUI:1.3.1'
    implementation 'org.mongodb:mongodb-driver-sync:5.0.0'
    implementation "de.tr7zw:item-nbt-api:2.12.2"

    // command api
    compileOnly 'dev.jorel:commandapi-annotations:9.3.0'
    annotationProcessor 'dev.jorel:commandapi-annotations:9.3.0'
    implementation "dev.jorel:commandapi-bukkit-shade:9.3.0"

}

shadowJar {
    dependencies {
        include dependency("dev.jorel:commandapi-bukkit-shade:9.3.0")
        include dependency("com.samjakob:SpiGUI:1.3.1")
        include dependency("de.tr7zw:item-nbt-api:2.12.2")
    }
    relocate("dev.jorel.commandapi", "com.awokens.movingborder.api.commandapi")
    relocate("com.samjakob.spigui", "com.awokens.movingborder.api.spigui")
    relocate("de.tr7zw.changeme.nbtapi", "com.awokens.movingborder.api.nbt")
}
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
